[

	{"desc":"on_build_demo_signals() function template",
	"prefix": "template-demo-signals",
	"body": [
		"//Function called to generate demo siganls (when no physical device is attached)",
		"function on_build_demo_signals()",
		"{",
		"  //Use the function below to get the number of samples to be built",
		"  var samples_to_build = ScanaStudio.builder_get_maximum_samples_count();",
		"  //Todo: build the demo signals",
		"}",
		"",
		""
	]}
	,
	{"desc":"on_build_signals() function template",
	"prefix": "template-build-signals",
	"body": [
		"//Function called to build siganls (to be generate by capable device)",
		"function on_build_signals()",
		"{",
		"  //Use the function below to get the number of samples to be built",
		"  var samples_to_build = ScanaStudio.builder_get_maximum_samples_count();",
		"  //Todo: build the signals",
		"}",
		"",
		""
	]}
	,
	{"desc":"BuilderObject template",
	"prefix": "template-builder-object",
	"body": [
		"//Builder object that can be shared to other scripts",
		"ScanaStudio.BuilderObject = {",
		"    build_cycle : function(parameter)",
		"  {",
		"    //Todo: write your code!",
		"  },",
		"  configure : function(sample_rate,channel)",
		"  {",
		"    this.sampling_rate = sample_rate;",
		"        this.channel = channel",
		"  }",
		"};",
		"",
		""
	]}
	,
	{"desc":"on_draw_gui_signal_builder() function template",
	"prefix": "template-gui-signal-builder",
	"body": [
		"//Decoder GUI",
		"function on_draw_gui_signal_builder() {",
		"    //Define decoder configuration GUI",
		"    ScanaStudio.gui_add_ch_selector(\"${1:id}\", \"${2:caption}\", \"${3:new_channel_name}\");",
		"    ${4://Add other gui functions...}",
		"}",
		"",
		""
	]}
	,
	{"desc":"on_eval_gui_decoder() function template.",
	"prefix": "template-eval-gui-signal-builder",
	"body": [
		"//Evaluate signal builder GUI",
		"function on_eval_gui_signal_builder() {",
		"    //TODO: Make sure GUI configuration is valid",
		"    return \"\"; //All good.",
		"}",
		"",
		""
	]}
	,
	{"desc":"ScanaStudio meta-info template",
	"prefix": "template-meta-info",
	"body": [
		"/* Protocol meta info:",
		"<NAME> ${1:My Protocol} </NAME>",
		"<DESCRIPTION>",
		"${2:My protocol can decode pretty much any logic signal!}",
		"</DESCRIPTION>",
		"<VERSION> 0.0 </VERSION>",
		"<AUTHOR_NAME> ${3:Your name} </AUTHOR_NAME>",
		"<AUTHOR_URL> ${4:your@email.or.website} </AUTHOR_URL>",
		"<HELP_URL> ${5:https://github.com/ikalogic/ScanaStudio-scripts-v3/wiki} </HELP_URL>",
		"<COPYRIGHT> Copyright ${3:your name} </COPYRIGHT>",
		"<LICENSE> This code is distributed under the terms of the GNU General Public License GPLv3 </LICENSE>",
		"<RELEASE_NOTES>",
		"V0.0: Initial release.",
		"</RELEASE_NOTES>",
		"*/",
		"",
		""
	]}
	,
	{"desc":"on_decode_signals() function template",
	"prefix": "template-decode-signals",
	"body": [
		"//Global variables",
		"var sampling_rate;",
		"var state_machine;",
		"",
		"function on_decode_signals(resume) {",
		"    if (!resume) //If resume == false, it's the first call to this function.",
		"    {",
		"        //initialization code goes here, ex:",
		"        state_machine = 0;",
		"        sampling_rate = ScanaStudio.get_capture_sample_rate();",
		"        // read GUI values using ScanaStudio.gui_get_value(\"ID\");",
		"        ${1://...}",
		"    }",
		"",
		"    while (ScanaStudio.abort_is_requested() == false) {",
		"        switch (state_machine) {",
		"            case 0:",
		"                //Todo...",
		"                break;",
		"            case 1:",
		"                //Todo...",
		"                break;",
		"            default:",
		"            //Todo...",
		"        }",
		"    }",
		"}",
		"",
		""
	]}
	,
	{"desc":"on_draw_gui_decoder() function template",
	"prefix": "template-gui-decoder",
	"body": [
		"//Decoder GUI",
		"function on_draw_gui_decoder() {",
		"    //Define decoder configuration GUI",
		"    ScanaStudio.gui_add_ch_selector(\"${1:id}\", \"${2:caption}\", \"${3:new_channel_name}\");",
		"    ${4://Add other gui functions...}",
		"}",
		"",
		""
	]}
	,
	{"desc":"on_eval_gui_decoder() function template",
	"prefix": "template-eval-gui-decoder",
	"body": [
		"//Evaluate decoder GUI",
		"function on_eval_gui_decoder() {",
		"    //TODO: Make sure GUI configuration is valid",
		"    return \"\"; //All good.",
		"}",
		"",
		"",
		""
	]}

]